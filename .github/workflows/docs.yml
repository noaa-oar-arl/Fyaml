name: Documentation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'docs/**'
      - 'src/**/*.f90'
      - 'src/**/*.F90'
      - 'mkdocs.yml'
      - 'requirements-docs.txt'
      - '.github/workflows/docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'docs/**'
      - 'src/**/*.f90'
      - 'src/**/*.F90'
      - 'mkdocs.yml'
      - 'requirements-docs.txt'
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build-docs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for git-based plugins

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen graphviz

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-docs.txt

    - name: Verify doxygen installation
      run: |
        doxygen --version
        which doxygen

    - name: Debug mkdoxy configuration
      run: |
        echo "=== MkDocs Configuration ==="
        cat mkdocs.yml
        echo "=== Source Directory Contents ==="
        find src -name "*.f90" -o -name "*.F90" | head -10
        echo "=== Python Package Versions ==="
        pip list | grep -E "(mkdocs|mkdoxy|doxygen)"

    - name: Build documentation
      run: |
        # Set environment variables for mkdoxy
        export DOXYGEN_EXECUTABLE=$(which doxygen)

        # Build the documentation
        mkdocs build --verbose --strict

    - name: Upload documentation artifacts
      if: success()
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./site

    - name: Upload build logs on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: build-logs
        path: |
          ./site/
          ./.mkdoxy/
        retention-days: 5

  deploy-docs:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: build-docs
    runs-on: ubuntu-latest

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  build-docs-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen graphviz

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-docs.txt

    - name: Build documentation (PR check)
      run: |
        export DOXYGEN_EXECUTABLE=$(which doxygen)
        mkdocs build --verbose

    - name: Comment on PR
      if: success()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '✅ Documentation builds successfully! Preview will be available once merged to main.'
          })

    - name: Comment on PR failure
      if: failure()
      uses: actions/github-script@v7
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '❌ Documentation build failed. Please check the [workflow logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for details.'
          })
